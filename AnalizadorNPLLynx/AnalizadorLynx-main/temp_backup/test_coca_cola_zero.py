#!/usr/bin/env python3
# test_coca_cola_zero.py - Prueba para b√∫squeda de marca y variante espec√≠fica
import json
from utilidades import ConfiguracionLYNX
from analizador_lexico import AnalizadorLexicoLYNX

def test_coca_cola_zero():
    """Prueba espec√≠fica para b√∫squeda 'coca cola zero'"""
    
    print("üß™ PRUEBA ESPEC√çFICA: 'coca cola zero'")
    print("=" * 60)
    
    # Inicializar sistema
    print("üöÄ Inicializando sistema...")
    configuracion = ConfiguracionLYNX()
    analizador = AnalizadorLexicoLYNX(configuracion)
    
    print("‚úÖ Sistema inicializado")
    print()
    
    # Consulta a probar
    consulta = "coca cola zero"
    
    print(f"üîç Consultando: '{consulta}'")
    print()
    
    try:
        # Generar resultado completo
        resultado_json = analizador.generar_json_resultado_completo(consulta)
        resultado = json.loads(resultado_json)
        
        # Mostrar interpretaci√≥n
        interpretacion = resultado.get('interpretation', {})
        print("üß† INTERPRETACI√ìN DEL SISTEMA:")
        print(f"   ‚Ä¢ Producto: {interpretacion.get('producto', 'No detectado')}")
        print(f"   ‚Ä¢ Categor√≠a: {interpretacion.get('categoria', 'No detectada')}")
        print(f"   ‚Ä¢ Atributos: {interpretacion.get('atributos', [])}")
        
        filtros = interpretacion.get('filtros', {})
        if filtros.get('precio'):
            print(f"   ‚Ä¢ Filtros precio: {filtros['precio']}")
        
        print()
        
        # Mostrar recomendaciones
        recomendaciones = resultado.get('recommendations', [])
        print(f"üõçÔ∏è  PRODUCTOS ENCONTRADOS: {len(recomendaciones)}")
        print()
        
        for i, rec in enumerate(recomendaciones, 1):
            nombre = rec.get('name', 'Sin nombre')
            precio = rec.get('price', 0)
            categoria = rec.get('category', 'Sin categor√≠a')
            score = rec.get('match_score', 0)
            razones = rec.get('match_reasons', [])
            
            # Indicadores visuales
            indicadores = []
            if 'coca' in nombre.lower() and 'cola' in nombre.lower():
                indicadores.append("ü•§")
            if 'zero' in nombre.lower() or 'light' in nombre.lower():
                indicadores.append("üö´üçØ")  # Sin az√∫car
            if any(palabra in nombre.lower() for palabra in ['500ml', '1l', '2l', '355ml']):
                indicadores.append("üìè")  # Tama√±o espec√≠fico
                
            indicador_str = ''.join(indicadores) + ' ' if indicadores else ''
            
            print(f"{i}. {indicador_str}{nombre}")
            print(f"   üí∞ ${precio:.2f} | üìÇ {categoria} | ‚≠ê {score*100:.0f}%")
            print(f"   üéØ Razones: {', '.join(razones[:3])}")
            print()
        
        # An√°lisis del resultado
        print("üìä AN√ÅLISIS:")
        
        # Verificar si detect√≥ "coca cola"
        if 'coca cola' in str(interpretacion).lower() or ('coca' in str(interpretacion) and 'cola' in str(interpretacion)):
            print("   ‚úÖ Marca 'Coca Cola' detectada correctamente")
        else:
            print("   ‚ùå Marca 'Coca Cola' NO fue detectada")
        
        # Verificar si detect√≥ "zero"
        if 'zero' in interpretacion.get('atributos', []) or 'zero' in str(interpretacion).lower():
            print("   ‚úÖ Variante 'Zero' detectada correctamente")
        else:
            print("   ‚ùå Variante 'Zero' NO fue detectada")
        
        # Verificar si la categor√≠a es bebidas
        if 'bebida' in interpretacion.get('categoria', '').lower():
            print("   ‚úÖ Categor√≠a 'bebidas' detectada correctamente")
        else:
            print("   ‚ö†Ô∏è  Categor√≠a 'bebidas' no detectada expl√≠citamente")
        
        # Verificar si los productos encontrados son apropiados
        productos_coca_cola = 0
        productos_zero = 0
        productos_bebidas = 0
        productos_exactos = 0
        
        for rec in recomendaciones:
            nombre = rec.get('name', '').lower()
            categoria = rec.get('category', '').lower()
            
            es_coca_cola = 'coca' in nombre and 'cola' in nombre
            es_zero = 'zero' in nombre
            es_bebida = 'bebida' in categoria
            es_exacto = es_coca_cola and es_zero
            
            if es_coca_cola:
                productos_coca_cola += 1
            if es_zero:
                productos_zero += 1
            if es_bebida:
                productos_bebidas += 1
            if es_exacto:
                productos_exactos += 1
        
        print(f"   ü•§ Productos Coca Cola: {productos_coca_cola}/{len(recomendaciones)}")
        print(f"   üö´ Productos Zero: {productos_zero}/{len(recomendaciones)}")
        print(f"   üç∫ Productos bebidas: {productos_bebidas}/{len(recomendaciones)}")
        print(f"   üéØ Coca Cola Zero exactos: {productos_exactos}/{len(recomendaciones)}")
        
        # Evaluaci√≥n del comportamiento
        if productos_exactos > 0:
            print("   ‚úÖ Encontrados productos Coca Cola Zero exactos")
            if productos_exactos >= 3:
                print("   ‚úÖ M√∫ltiples opciones de Coca Cola Zero disponibles")
        else:
            print("   ‚ùå No se encontraron productos Coca Cola Zero exactos")
            
        if productos_coca_cola > productos_exactos:
            print("   ‚úÖ Tambi√©n muestra otras variantes de Coca Cola (buena expansi√≥n)")
        elif productos_coca_cola == productos_exactos and productos_exactos > 0:
            print("   ‚úÖ Resultados muy espec√≠ficos para Coca Cola Zero")
        else:
            print("   ‚ö†Ô∏è  Pocos productos de Coca Cola encontrados")
            
        if productos_bebidas > len(recomendaciones) * 0.7:
            print("   ‚úÖ Bien categorizado como bebidas")
        else:
            print("   ‚ö†Ô∏è  Algunos resultados no son bebidas")
        
        # Verificar si est√°n ordenados por relevancia (productos exactos primero)
        primeros_3 = recomendaciones[:3]
        exactos_en_top3 = sum(1 for rec in primeros_3 if 'coca' in rec.get('name', '').lower() and 'cola' in rec.get('name', '').lower() and 'zero' in rec.get('name', '').lower())
        
        if exactos_en_top3 >= 1:
            print("   ‚úÖ Productos m√°s espec√≠ficos aparecen primero")
        else:
            print("   ‚ö†Ô∏è  Los resultados m√°s espec√≠ficos no aparecen primero")
        
    except Exception as e:
        print(f"‚ùå Error durante la prueba: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_coca_cola_zero()
